define("enrol_stripepayment/stripe_payment",["core/ajax"],function(ajax){const{call:fetchMany}=ajax,createDOM=instanceid=>{const cache=new Map;return{getelement(id){const fullid=`${id}-${instanceid}`;return cache.has(fullid)||cache.set(fullid,document.getElementById(fullid)),cache.get(fullid)},setelement(id,html){const element=this.getelement(id);element&&(element.innerHTML=html)},toggleelement(id,show){const element=this.getelement(id);element&&(element.style.display=show?"block":"none")},focuselement(id){const element=this.getelement(id);element&&element.focus()},setbutton(id,disabled,text){let opacity=arguments.length>3&&void 0!==arguments[3]?arguments[3]:disabled?"0.7":"1";const button=this.getelement(id);button&&(button.disabled=disabled,button.textContent=text,button.style.opacity=opacity,button.style.cursor=disabled?"not-allowed":"pointer")}}};return{stripe_payment:function(userid,publishablekey,couponid,instanceid,pleasewaitstring,entercoupon,couponappling){const DOM=createDOM(instanceid);if(void 0===window.Stripe)return;const applyCouponHandler=async event=>{event.preventDefault();const couponinput=DOM.getelement("coupon"),couponcode=null==couponinput?void 0:couponinput.value.trim();if(!couponcode)return displayMessage("showmessage",entercoupon,"error"),void DOM.focuselement("coupon");DOM.setbutton("apply",!0,couponappling);try{const data=await((couponid,instanceid)=>fetchMany([{methodname:"moodle_stripepayment_applycoupon",args:{couponid:couponid,instanceid:instanceid}}])[0])(couponcode,instanceid);if(void 0===(null==data?void 0:data.status))throw new Error("Invalid server response");couponid=couponcode,DOM.toggleelement("coupon",!1),DOM.toggleelement("apply",!1),updateUIFromServerResponse(data)}catch(error){displayMessage("showmessage",error.message||"Coupon validation failed","error"),DOM.focuselement("coupon")}},EnrollHandler=async()=>{if(DOM.getelement("enrolbutton")){clearError("paymentresponse"),DOM.setbutton("enrolbutton",!0,pleasewaitstring);try{var _paymentdata$error;const paymentdata=await((userid,couponid,instanceid)=>fetchMany([{methodname:"moodle_stripepayment_enrol",args:{userid:userid,couponid:couponid,instanceid:instanceid}}])[0])(userid,couponid,instanceid);null!==(_paymentdata$error=paymentdata.error)&&void 0!==_paymentdata$error&&_paymentdata$error.message?displayMessage("paymentresponse",paymentdata.error.message,"error"):"success"===paymentdata.status&&paymentdata.redirecturl?window.location.href=paymentdata.redirecturl:displayMessage("paymentresponse","Unknown error occurred during payment.","error")}catch(err){displayMessage("paymentresponse",err.message,"error")}finally{DOM.toggleelement("enrolbutton",!1)}}},displayMessage=(containerid,message,type)=>{let color;switch(type){case"error":color="red";break;case"success":color="green";break;default:color="blue"}DOM.setelement(containerid,`<p style="color: ${color}; font-weight: bold;">${message}</p>`),DOM.toggleelement(containerid,!0)},clearError=containerid=>{DOM.setelement(containerid,""),DOM.toggleelement(containerid,!1)},updateUIFromServerResponse=data=>{if(data.message?displayMessage("showmessage",data.message,"error"===data.uistate?"error":"success"):clearError("showmessage"),DOM.toggleelement("enrolbutton","paid"===data.uistate),DOM.toggleelement("total","paid"===data.uistate),"error"!==data.uistate){if(DOM.toggleelement("discountsection",data.showsections.discountsection),data.showsections.discountsection&&(data.couponname&&DOM.setelement("discounttag",data.couponname),data.discountamount&&data.currency&&DOM.setelement("discountamountdisplay",`-${data.currency} ${data.discountamount}`),data.discountamount&&data.discountvalue)){const note="percentoff"===data.coupontype?`${data.discountvalue}% off`:`${data.currency} ${data.discountvalue} off`;DOM.setelement("discountnote",note)}if(data.status&&data.currency){const totalamount=DOM.getelement("totalamount");totalamount&&(totalamount.textContent=`${data.currency} ${parseFloat(data.status).toFixed(2)}`)}}};[{id:"apply",event:"click",handler:applyCouponHandler},{id:"enrolbutton",event:"click",handler:EnrollHandler}].forEach(_ref=>{let{id:id,event:event,handler:handler}=_ref;const element=DOM.getelement(id);element&&element.addEventListener(event,handler)})}}});

//# sourceMappingURL=stripe_payment.min.js.map