name: Moodle Plugin CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-24.04
    services:
      mariadb:
        image: mariadb:10.11.7
        env:
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_CHARACTER_SET_SERVER: "utf8mb4"
          MYSQL_COLLATION_SERVER: "utf8mb4_unicode_ci"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        php: ['8.4']
        moodle-branch: ['MOODLE_500_STABLE']
        database: [mariadb]

    steps:
      - name: Checkout Plugin
        uses: actions/checkout@v4
        with:
          path: stripepayment

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl, soap, curl, gd, xml, json, zip, pdo, pdo_mysql,
          ini-values: max_input_vars=5000
          coverage: none

      - name: Setup Node.js (for Grunt)
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Moodle Node dependencies
        run: npm install
        working-directory: stripepayment

      - name: Build grunt
        run: npm run build
        working-directory: stripepayment

      - name: Install Plugin Composer Dependencies
        run: composer install --no-dev --prefer-dist --no-progress
        working-directory: stripepayment

      - name: Run PHPUnit Tests
        run: moodle-plugin-ci phpunit --fail-on-warning stripepayment


  create_tag_and_release:
    runs-on: ubuntu-24.04
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          path: stripepayment

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Install dependencies
        run: npm install
        working-directory: stripepayment

      - name: Create and push tag
        run: npm run release
        working-directory: stripepayment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Composer Dependencies
        run: composer install --no-dev --prefer-dist --no-progress
        working-directory: stripepayment

      - name: Prepare Release Folder
        run: mkdir -p release

      - name: Build Zip using exclude.lst
        run: |
          zip -r release/stripepayment.zip stripepayment -x@stripepayment/exclude.lst

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/stripepayment.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
